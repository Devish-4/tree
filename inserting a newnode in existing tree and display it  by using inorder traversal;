#include<bits/stdc++.h>
using namespace std;
struct node{
	int data;
	node* left;
	node*right;
};
node* newnode(int key)
{
	node *newnode=new node;
	newnode->data=key;
	newnode->left=NULL;
	newnode->right=NULL;
	return newnode;
}
 void inorder(node *temp)
 {
 	
 	if(!temp)
 	return;
 	
 	inorder(temp->left);
 	cout<<temp->data<<" ";
 	inorder(temp->right);
 }
 void insert( node *temp ,int key)
 {
 	queue<node*>q;
 	q.push(temp);
 	while(!q.empty())
 	{
 		node *temp=q.front();
 		q.pop();
 		if(!temp->left)
 		{
 			temp->left=newnode(key);
 			break;
		 }
		 else
		 {
		 	q.push(temp->left);
		 }
		 if((!temp->right))
		 {
		 	temp->right=newnode(key);
		 	break;
		 }
		 else
		 {
		 	q.push(temp->right);
		 }
	 }
 }

int main()
{
	
	 node* root =newnode(10);
	 
	 root->left=newnode(11);
	 root->right= newnode(9);
	 root->left->left=newnode(7);
	 root->	right->right=newnode(8);
	 root->right->left=newnode(15);
	 
	 cout<<" before insertion"<<endl;
	 inorder(root);
	 int key=12;
	 
	 insert(root,key);
	 cout<<" afetr insertion"<<endl;
	 inorder(root);
}
